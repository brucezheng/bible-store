import { useRouter } from 'next/router'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import Stripe from 'stripe'
import CheckoutForm from '../components/CheckoutForm'
import { getStripe } from '../components/StripeUtils'
import { CartProvider } from '../providers/CartProvider'
import styles from '../styles/Home.module.css'
import {Elements} from '@stripe/react-stripe-js'
import { decodeCartItems, formatCurrency, calculateTotal } from '../components/Utils'

function Checkout(props) {
  const formattedCartTotal = formatCurrency(props.cartTotal);
  const options = {
    clientSecret: props.paymentIntent.client_secret,
  };
  return (
    <CartProvider>
      <Elements stripe={getStripe()} options={options}>
        <div className={styles.container}>
          <Head>
            <title>Checkout</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <main className={styles.main}>
            <h1 className={styles.title}>
              Checkout
            </h1>

            <p>
              Your total is {formattedCartTotal}
            </p>

            <CheckoutForm />

            <div className={styles.grid}>
              <Link href="/summary">
                <a className={styles.card}>Pay</a>
              </Link>
            </div>
          </main>
        </div>
      </Elements>
    </CartProvider>
  )
}

// This gets called on every request
export async function getServerSideProps({ query }) {
  const cartItems = decodeCartItems(query.cart);
  const cartTotal = calculateTotal(cartItems);
  const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);
  const paymentIntent = await stripe.paymentIntents.create({
    amount: cartTotal * 100,
    currency: "usd"
  });

  return {
    props: {
      cartTotal,
      paymentIntent,
    }
  };
}

export default Checkout;